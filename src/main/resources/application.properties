logging.pattern.console=%d{HH:mm:ss.SSS} -%5p %-12.12thread %-20.20logger{0} %message%n
logging.level.victor=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.root=DEBUG
logging.level.p6spy=DEBUG
logging.level.com.p6spy=DEBUG



spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory

#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.datasource.url = jdbc:p6spy:h2:tcp://localhost:9092/~/test;MODE=PostgreSQL
spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver

#spring.datasource.url = jdbc:h2:tcp://localhost:9092/~/test
#spring.datasource.driver-class-name= org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa



spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

spring.jpa.hibernate.ddl-auto=create
#runs schema.sql after hibernate creates the schema
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
# ignore errors running schema.sql
spring.sql.init.continue-on-error=true
spring.sql.init.separator=//


#spring.jpa.properties.hibernate.generate_statistics=true
#spring.jpa.properties.hibernate.jdbc.fetch_size=1000


spring.h2.console.enabled=true
#To see the DB contents with Eclipse or IntelliJ Community:
# Open http://localhost:8080/h2-console/
# Copy the JDBC url from above in there, user=sa, pass=sa   and connect :)

management.endpoints.web.exposure.include=*


#Transaction logging:
#logging.level.org.springframework.orm.jpa.JpaTransactionManager=TRACE
#logging.level.org.springframework.transaction.interceptor.TransactionInterceptor=TRACE

